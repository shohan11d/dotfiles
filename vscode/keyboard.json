// Place your key bindings in this file to override the defaults
[
    {
      "key": "ctrl+p",
      "command": "workbench.action.openRecent"
    },
    {
      "key": "alt+d",
      "command": "editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
    },
  
    {
      "key": "h",
      "command": "editor.action.scrollLeftHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "j",
      "command": "editor.action.scrollDownHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "k",
      "command": "editor.action.scrollUpHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "l",
      "command": "editor.action.scrollRightHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "ctrl+x",
      "command": "workbench.action.toggleMaximizedPanel",
      "when": "terminalFocus"
    },
  
    {
      "key": "n",
      "command": "explorer.newFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "shift+n",
      "command": "explorer.newFolder",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "y",
      "command": "filesExplorer.copy",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "x",
      "command": "filesExplorer.cut",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "p",
      "command": "filesExplorer.paste",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "d",
      "command": "moveFileToTrash",
      "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "shift+d",
      "command": "deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "c",
      "command": "workbench.files.action.collapseExplorerFolders",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "s",
      "command": "explorer.openToSide",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
      "key": "f",
      "command": "revealFileInOS",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
      "key": "t",
      "command": "openInTerminal",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "u",
      "command": "copyFilePath",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
      "key": "i",
      "command": "copyRelativeFilePath",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
  
    // Terminal
    {
      "key": "ctrl+m",
      "command": "workbench.action.toggleMaximizedPanel",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "Alt+j",
      "command": "workbench.action.terminal.scrollDown",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "Alt+k",
      "command": "workbench.action.terminal.scrollUp",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "ctrl+shift+h",
      "command": "workbench.action.terminal.scrollDownPage",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "ctrl+shift+l",
      "command": "workbench.action.terminal.scrollUpPage",
      "when": "terminalFocus && terminalProcessSupported"
    },
  
    // NAVIGATION
    // move up and down in suggestions box
  
    {
      "key": "ctrl+j",
      "command": "selectNextSuggestion",
      "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
      "key": "ctrl+k",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetVisible"
    },
    // move up and down in quick fix box
    {
      "key": "ctrl+j",
      "command": "selectNextCodeAction",
      "when": "editorFocus && !suggestWidgetVisible"
    },
    {
      "key": "ctrl+k",
      "command": "selectPrevCodeAction",
  
      "when": "editorFocus && !suggestWidgetVisible"
    },
    // move up and down in quick open file box
    {
      "key": "ctrl+j",
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
    },
  
    {
      "key": "ctrl+k",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
  
    {
      "key": "ctrl+j",
      "command": "workbench.action.terminal.focusNext",
      "when": "terminalFocus"
    },
  
    {
      "key": "ctrl+k",
      "command": "workbench.action.terminal.focusPrevious",
      "when": "terminalFocus"
    },
    {
      "key": "ctrl+shift+j",
      "command": "workbench.action.togglePanel"
    },
  
    {
      "key": "ctrl+w",
      "command": "workbench.action.terminal.kill",
      "when": "terminalFocus"
    },
    // FILE TREE
    {
      "command": "workbench.action.toggleSidebarVisibility",
      "key": "ctrl+e"
    },
  
    {
      "command": "workbench.files.action.focusFilesExplorer",
      "key": "ctrl+e",
      "when": "editorTextFocus"
    },
    {
      "key": "n",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "key": "ctrl+n",
      "command": "explorer.newFolder",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "command": "renameFile",
      "key": "r",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    {
      "command": "deleteFile",
      "key": "d",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    // EXTRA
    {
      "key": "alt+m",
      "command": "editor.emmet.action.matchTag"
    },
  
    {
      "key": "alt+f",
      "command": "workbench.action.quickOpen"
    },
    {
      "key": "ctrl+p",
      "command": "-workbench.action.quickOpen"
    },
    {
      "key": "alt+l",
      "command": "cursorRight",
      "when": "textInputFocus"
    },
    {
      "key": "alt+h",
      "command": "cursorLeft",
      "when": "textInputFocus"
    },
    {
      "key": "ctrl+shift+i",
      "command": "editor.action.formatDocument",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
  
    {
      "key": "ctrl+alt+a",
      "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
      "key": "ctrl+alt+m",
      "command": "workbench.action.toggleMenuBar"
    },
    {
      "key": "ctrl+alt+z",
      "command": "workbench.action.toggleZenMode",
      "when": "!isAuxiliaryWindowFocusedContext"
    },
  
    {
      "key": "ctrl+shift+n",
      "command": "workbench.action.newWindow"
    },
    {
      "key": "alt+b",
      "command": "editor.emmet.action.balanceOut"
    },
  
    //   {
    //     "key": "alt+t",
    //     "command": "workbench.action.showAllSymbols"
    //   },
    {
      "key": "ctrl+t",
      "command": "workbench.action.showAllSymbols"
    },
    {
      "key": "alt+m",
      "command": "acceptSelectedSuggestion",
      "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
  
    {
      "key": "ctrl+n",
      "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
      "key": "ctrl+v",
      "command": "-extension.vim_ctrl+v",
      "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
    },
    {
      "key": "shift+insert",
      "command": "-editor.action.clipboardPasteAction"
    },
    {
      "key": "ctrl+shift+v",
      "command": "workbench.action.terminal.paste",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "ctrl+shift+a",
      "command": "workbench.action.terminal.paste",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    }
  ]
       